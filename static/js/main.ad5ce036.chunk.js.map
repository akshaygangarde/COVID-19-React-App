{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","components/CountryPicker/CountryPicker.jsx","api/index.js","components/Charts/Charts.jsx","App.js","index.js","App.module.css","components/CountryPicker/CountryPicker.module.css","components/Charts/Charts.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","start","end","value","duration","separator","Date","toDateString","variant","CountryPicker","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","a","fetchCountries","fetchApi","FormControl","NativeSelect","defaultValue","onChange","e","target","map","country","i","key","url","fetchData","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","dailyData","total","date","reportDate","countries","name","Charts","setDailyData","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad5ce036.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3S8VD\",\"card\":\"Cards_card__2jOay\",\"infected\":\"Cards_infected__2Kx8d\",\"recovered\":\"Cards_recovered__YAA5I\",\"deaths\":\"Cards_deaths__2IIvu\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport Countup from 'react-countup';\r\n\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return 'Loading...'\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            <Countup\r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={3}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        \r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                            Number of active cases of COVID-19\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                        <Countup\r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={3}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        \r\n                        <Typography color=\"textSecondary\">\r\n                        {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                            Number of recovered cases of COVID-19\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                        <Countup\r\n                                start={0}\r\n                                end={deaths.value}\r\n                                duration={3}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        \r\n                        <Typography color=\"textSecondary\">\r\n                        {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                            Number of deaths caused by COVID-19\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange}) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        const fetchApi = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchApi();\r\n\r\n    },[setFetchedCountries]);\r\n\r\n\r\n    return (\r\n        <FormControl className={styles.FormControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n    {fetchedCountries.map((country,i)=> <option key = {i} value = {country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import axios from 'axios';\r\nimport CountryPicker from '../components/CountryPicker/CountryPicker';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\" ;\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if(country)\r\n    {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n try {\r\n    const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\r\n\r\n    const modifiedData = {\r\n        confirmed ,\r\n        recovered,\r\n        deaths,\r\n        lastUpdate,\r\n    }\r\n\r\n    return modifiedData;\r\n }  catch (error) {\r\n     console.log(error);\r\n }   \r\n}\r\n\r\nexport const fetchDailyData = async() => {\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate, \r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error);       \r\n    }\r\n}\r\n\r\nexport const fetchCountries = async() => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Charts.module.css';\r\n\r\nconst Charts = ({data: {confirmed, recovered, deaths}, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchApi();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length  \r\n        ?(\r\n        <Line\r\n            data={{\r\n                labels: dailyData.map(({ date }) => date),\r\n                datasets: [{\r\n                    data: dailyData.map(({confirmed}) => confirmed),\r\n                    label: 'Confirmed',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                }, {\r\n                    data: dailyData.map(({deaths}) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255,0,0,0.5)',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n        />) : null\r\n    \r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar\r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor:[\r\n                            'rgba(0, 0, 255, 0.5)',\r\n                            'rgba(0, 255,0 , 0.5)',\r\n                            'rgba(255, 0, 0, 0.5)',                       \r\n                        \r\n                        ],\r\n                        data: [confirmed.value, recovered.value, deaths.value],\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: {display: false},\r\n                    title: {display: true, text: `Current state in ${country}`}\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart:lineChart}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Charts;","import React from'react';\r\n\r\nimport { Cards, Charts, CountryPicker } from './components'\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends React.Component{\r\n\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({ data: fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        \r\n\r\n        const fetchedData = await fetchData(country);\r\n\r\n        this.setState({data: fetchedData, country: country});\r\n    }\r\n\r\n    render(){\r\n        const {data, country} = this.state;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\r\n                <Cards data={data}></Cards>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Charts data = {data} country={country}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3QJIK\",\"image\":\"App_image__2ALom\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2JM1t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__2Xsr2\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}